{"ast":null,"code":"var _jsxFileName = \"/home/consultor/Documentos/React 2023/3A - Alex Barreira/2\\xBA Aula/music-box/src/pages/Musicas.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport api from \"../api\"; // importando a instância do Axios de \"api.js\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Musicas() {\n  _s();\n  const [musicas, setMusicas] = useState([]); // criando estado de vetor para uma lista de músicas  \n\n  function listar() {\n    console.log(\"Requisição está sendo feita: \");\n    api.get() // invocando o método \"get\" do axios utilizando a URL base instanciada em \"api.js\"\n    .then(resposta => {\n      // método get responde uma Promise que será resolvida, e quando obtiver uma resposta, cairá no \"then\" recebendo a resposta como parâmetro\n      console.log(resposta.data); // exibindo o atributo \"data\", que possui o vetor de dados do objeto de resposta que foi recebido\n      setMusicas(resposta.data); // utilizando o setter para alterar o valor do estado (useState) de \"musicas\"        \n    }).catch(errorOcorrido => {\n      // caso a requisição falhe, o \"catch\" pegará o erro, recebendo como parâmetro de uma função\n      console.log(errorOcorrido); // exibindo o erro que ocorreu na requisição\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: listar,\n      children: \"Listar M\\xFAsicas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this),\n    // percorrendo o vetor de músicas, onde para cada objeto, retorna um elemento div que usa os atributos daquele objeto de música (id e titulo)\n    // ao utilizar um vetor para criar objetos com o \".map()\" devemos indicar qual será a chave (key) do elemento (que deve ser única), afim de identificar o elemento\n    musicas.map(musica => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: musica.titulo\n    }, musica.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true);\n}\n_s(Musicas, \"l0a56YbGyGPyGhETqkMZ2fYIhxk=\");\n_c = Musicas;\nexport default Musicas;\nvar _c;\n$RefreshReg$(_c, \"Musicas\");","map":{"version":3,"names":["useEffect","useState","api","jsxDEV","_jsxDEV","Fragment","_Fragment","Musicas","_s","musicas","setMusicas","listar","console","log","get","then","resposta","data","catch","errorOcorrido","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","musica","titulo","id","_c","$RefreshReg$"],"sources":["/home/consultor/Documentos/React 2023/3A - Alex Barreira/2º Aula/music-box/src/pages/Musicas.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport api from \"../api\"; // importando a instância do Axios de \"api.js\"\n\nfunction Musicas() {\n\n    const [musicas, setMusicas] = useState( [] ); // criando estado de vetor para uma lista de músicas  \n\n    function listar() {\n        console.log(\"Requisição está sendo feita: \");\n\n        api.get()                               // invocando o método \"get\" do axios utilizando a URL base instanciada em \"api.js\"\n        .then((resposta) => {       // método get responde uma Promise que será resolvida, e quando obtiver uma resposta, cairá no \"then\" recebendo a resposta como parâmetro\n            console.log(resposta.data);   // exibindo o atributo \"data\", que possui o vetor de dados do objeto de resposta que foi recebido\n            setMusicas(resposta.data);    // utilizando o setter para alterar o valor do estado (useState) de \"musicas\"        \n        })\n        .catch((errorOcorrido) => {             // caso a requisição falhe, o \"catch\" pegará o erro, recebendo como parâmetro de uma função\n            console.log(errorOcorrido)          // exibindo o erro que ocorreu na requisição\n        });\n    }\n\n\n    return (\n        <>\n            <button onClick={listar}>Listar Músicas</button>\n\n            {\n                // percorrendo o vetor de músicas, onde para cada objeto, retorna um elemento div que usa os atributos daquele objeto de música (id e titulo)\n                // ao utilizar um vetor para criar objetos com o \".map()\" devemos indicar qual será a chave (key) do elemento (que deve ser única), afim de identificar o elemento\n                musicas.map((musica) => (\n                    <div key={musica.id}>\n                        { musica.titulo }\n                    </div>\n                ))\n            }\n            {/* \n                Documentação do \".map()\": \n                    - https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Array/map\n                Por padrão, o React não consegue renderizar listas ou objetos, por isso precisamos iterá-los a fim de criar um elemento para ser renderizado;\n                \"map()\" é uma função nativa do JS, que serve para percorrer um vetor e devolver um novo vetor ao final das iterações;  \n                Utilizando o \"musicas.map\", estamos iterando cada música do estado \"musicas\";\n                A cada iteração, estamos utilizando o parâmetro \"musica\" (qualquer nome), que representa o próprio objeto de \"musica\" que está sendo iterado naquele momento;\n                Com uma função de callback (\"arrow function\" ou \"função anônima\"), podemos retornar um novo elemento JSX no lugar do objeto \"musica\" que estamos iterando no momento, para renderizá-lo na tela;\n                Exemplos:\n                    [1, 2, 3, 4].map( function (numero) {\n                        return ( <div>Eu sou o número {numero}</div> );\n                    })\n                    \n                    - No exemplo acima, temos um vetor com 4 posições que será iterado;\n                    - Para cada item do vetor, o \".map()\" retornará uma div na função anônima usada como callback;\n                    - O parâmetro \"numero\" representa o item do vetor que está sendo iterado no momento, e será utilizado no corpo da div para interpolar seu valor e exibir o número;\n            */}\n        </>\n    );\n}\n\nexport default Musicas;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAOC,GAAG,MAAM,QAAQ,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAEf,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAE,EAAE,CAAE,CAAC,CAAC;;EAE9C,SAASU,MAAMA,CAAA,EAAG;IACdC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAE5CX,GAAG,CAACY,GAAG,EAAE,CAA+B;IAAA,CACvCC,IAAI,CAAEC,QAAQ,IAAK;MAAQ;MACxBJ,OAAO,CAACC,GAAG,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAG;MAC9BP,UAAU,CAACM,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAI;IAClC,CAAC,CAAC,CACDC,KAAK,CAAEC,aAAa,IAAK;MAAc;MACpCP,OAAO,CAACC,GAAG,CAACM,aAAa,CAAC,EAAU;IACxC,CAAC,CAAC;EACN;;EAGA,oBACIf,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACIhB,OAAA;MAAQiB,OAAO,EAAEV,MAAO;MAAAS,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;IAG5C;IACA;IACAhB,OAAO,CAACiB,GAAG,CAAEC,MAAM,iBACfvB,OAAA;MAAAgB,QAAA,EACMO,MAAM,CAACC;IAAM,GADTD,MAAM,CAACE,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAGtB,CAAC;EAAA,gBAmBP;AAEX;AAACjB,EAAA,CAlDQD,OAAO;AAAAuB,EAAA,GAAPvB,OAAO;AAoDhB,eAAeA,OAAO;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}